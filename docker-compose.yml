version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: hmdm-postgres
    environment:
      POSTGRES_DB: hmdm
      POSTGRES_USER: hmdm
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-topsecret}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - hmdm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hmdm -d hmdm"]
      interval: 30s
      timeout: 10s
      retries: 3

  hmdm:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: hmdm-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=hmdm
      - DB_USER=hmdm
      - DB_PASSWORD=${POSTGRES_PASSWORD:-topsecret}
      - DOMAIN=${DOMAIN:-localhost}
      - EMAIL=${EMAIL:-admin@example.com}
      - JAVA_OPTS=-Xms512m -Xmx2048m
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - hmdm_data:/opt/hmdm
      - tomcat_data:/var/lib/tomcat9
      - tomcat_logs:/var/log/tomcat9
      - letsencrypt_data:/etc/letsencrypt
      - ./hmdm-config:/etc/hmdm
    networks:
      - hmdm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s

volumes:
  postgres_data:
    driver: local
  hmdm_data:
    driver: local
  tomcat_data:
    driver: local
  tomcat_logs:
    driver: local
  letsencrypt_data:
    driver: local

networks:
  hmdm-network:
    driver: bridge 